{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706471996294_-1954463268","id":"20240128-195956_1622440040","dateCreated":"2024-01-28T19:59:56+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:464","text":"import spark.implicits._\nimport sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.util.UUID\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection \nimport org.apache.spark.sql.functions._\n\n// Import connexion à S3\n/*import org.apache.spark.sql.SQLContext\nimport org.apache.hadoop.fs.s3a.S3AFileSystem\nimport com.amazonaws.services.s3.transfer.TransferManager*/\n\n// Imports connexion Cassandra\nimport org.apache.spark.input.PortableDataStream\nimport org.apache.spark.sql.SQLContext\nimport org.apache.spark.sql.cassandra._\nimport com.datastax.spark.connector._\nimport org.apache.spark.sql.types.IntegerType\n\n// Imports chargement dataframe\nimport org.apache.spark.input.PortableDataStream\nimport java.util.zip.ZipInputStream\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n\nimport org.apache.spark.sql.functions.regexp_replace\nimport org.apache.spark.sql.functions.explode\nimport org.apache.spark.sql.functions\n\nimport org.apache.spark.sql.types.StringType\nimport org.apache.spark.sql.types.FloatType\nimport org.apache.spark.sql.functions.monotonically_increasing_id","dateUpdated":"2024-01-28T20:00:01+0000"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472506485_-1216995749","id":"20240128-200826_719510300","dateCreated":"2024-01-28T20:08:26+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2062","text":"val data_sampleDF = \"/2021011\"\nval path_event= \"/home/ubuntu/data/2021011[0-9]*.export.CSV.zip\"\nval path_mentions = \"/home/ubuntu/data/2021011[0-9]*.mentions.CSV.zip\"\nval path_gkg = \"/home/ubuntu/data/2021010[0-9]*.gkg.csv.zip\"","dateUpdated":"2024-01-28T20:27:56+0000","title":"Definition de donne de telecharger"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472005908_-1836425058","id":"20240128-200005_1385905308","dateCreated":"2024-01-28T20:00:05+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1906","text":"val dir = \"/home/ubuntu/data/\"\nval nomFichierAGarder = \"masterfilelist.txt\"\n\n// Fonction pour supprimer tous les fichiers dans un dossier, sauf un fichier spécifié\ndef deleteFilesInDirectoryExcept(directory: File, exceptFileName: String): Unit = {\n    Option(directory.listFiles).map(_.toList).getOrElse(Nil).foreach { file =>\n        if (file.isFile && file.getName != exceptFileName) file.delete()\n        // Si vous avez des sous-dossiers et souhaitez les conserver, retirez la ligne suivante\n        else if (file.isDirectory) deleteFilesInDirectoryExcept(file, exceptFileName)\n    }\n}\n\n// Supprimer les fichiers du dossier 'data', sauf 'fichier_a_garder.txt'\ndeleteFilesInDirectoryExcept(new File(dir), nomFichierAGarder)","dateUpdated":"2024-01-28T20:00:50+0000","title":"on supprime d'abord les fichier qui existent dans le dossier data"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472005613_906999543","id":"20240128-200005_851059145","dateCreated":"2024-01-28T20:00:05+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1834","text":"def fileDownloader(urlOfFileToDownload: String, fileName: String) = {\n    val url = new URL(urlOfFileToDownload)\n    val connection = url.openConnection().asInstanceOf[HttpURLConnection]\n    connection.setConnectTimeout(5000)\n    connection.setReadTimeout(5000)\n    connection.connect()\n\n    if (connection.getResponseCode >= 400)\n        println(\"error\")\n    else\n        url #> new File(fileName) !!\n}","dateUpdated":"2024-01-28T20:01:19+0000","title":"on créer la fonction Fileto download qui va permettre de télécharger des fichiers"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472005443_-1951820132","id":"20240128-200005_430981383","dateCreated":"2024-01-28T20:00:05+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1762","text":"fileDownloader(\"http://data.gdeltproject.org/gdeltv2/masterfilelist.txt\", \"/home/ubuntu/data/masterfilelist.txt\")// save the list file to the Spark Master","dateUpdated":"2024-01-28T20:02:03+0000","title":"utiliser la fonction FileToDownload pour télécharger masterfilelist qui contiont la liste de tous les données gdelt"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472005242_-1188414636","id":"20240128-200005_1444057157","dateCreated":"2024-01-28T20:00:05+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1690","text":"val sqlContext = new SQLContext(sc)\nval filesDF = sqlContext.read.\n                    option(\"delimiter\",\" \").\n                    option(\"infer_schema\",\"true\").\n                    csv(\"/home/ubuntu/data/masterfilelist.txt\").\n                    withColumnRenamed(\"_c0\",\"size\").\n                    withColumnRenamed(\"_c1\",\"hash\").\n                    withColumnRenamed(\"_c2\",\"url\").\n                    cache\n\nfilesDF.show(false)","dateUpdated":"2024-01-28T20:03:01+0000","title":"On crée une RDD qui contient 3 colonnes: size, hash et url du fichier gdelt à télécharger"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472005086_1403497516","id":"20240128-200005_1406534820","dateCreated":"2024-01-28T20:00:05+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1618","text":"val sampleDF = filesDF.filter(col(\"url\").contains(data_sampleDF)).cache\n\nsampleDF.show(false)","dateUpdated":"2024-01-28T20:10:03+0000","title":"Créer un RDD contenant les fichiers du jour/mois ou année choisi dans la méthode .contains()"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472004881_95793898","id":"20240128-200004_854831795","dateCreated":"2024-01-28T20:00:04+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1546","text":"sampleDF.select(\"url\").repartition(100).foreach( r=> {\n            val URL = r.getAs[String](0)\n            val fileName = r.getAs[String](0).split(\"/\").last\n            val dir = \"/home/ubuntu/data/\"\n            val localFileName = dir + fileName\n            fileDownloader(URL,  localFileName)\n            val localFile = new File(localFileName)\n            \n})","dateUpdated":"2024-01-28T20:11:03+0000","title":"télécharger les fichiers de données choisi auparavant"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472004705_1341800071","id":"20240128-200004_1037388015","dateCreated":"2024-01-28T20:00:04+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1474","text":"\n\nval eventsRDD = sc.binaryFiles(path_event).\n      flatMap { // decompresser les fichiers\n        case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n            takeWhile{ case null => zis.close(); false\n            case _ => true }.\n            flatMap { _ =>\n              val br = new BufferedReader(new InputStreamReader(zis))\n              Stream.continually(br.readLine()).takeWhile(_ != null)\n            }\n      }\n\neventsRDD.take(10).foreach(println)","dateUpdated":"2024-01-28T20:12:55+0000","title":"Chargement des données dans un RDD"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472004532_-299095389","id":"20240128-200004_2073050328","dateCreated":"2024-01-28T20:00:04+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1402","text":"// Conversion du RDD en dataframe\nval arrays = eventsRDD.map(_.split(\"\\t\")) \nval maxCols = arrays.first().length\nval eventsDF = arrays.toDF(\"arr\")\n  .select((0 until maxCols).map(i => $\"arr\"(i).as(s\"col_$i\")): _*)\n\neventsDF.show()","dateUpdated":"2024-01-28T20:13:19+0000","title":"transformer la RDD en un DF en ajoutant des colonnes"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472004360_104063340","id":"20240128-200004_678244084","dateCreated":"2024-01-28T20:00:04+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1330","text":"// Sélection des colonnes nécessaires pour la suite\nval newNames = Seq(\"globaleventid1\", \"eventdate\", \"monthyear\", \"year\", \"actiongeo_countrycode\")\nval events_cassandra = eventsDF.select(\"col_0\", \"col_1\", \"col_2\", \"col_3\", \"col_53\").toDF(newNames: _*)\n\nevents_cassandra.show()\n","dateUpdated":"2024-01-28T20:14:08+0000","title":"Renommer les colonnes de la table events"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472004193_482158553","id":"20240128-200004_527259451","dateCreated":"2024-01-28T20:00:04+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1258","text":"events_cassandra.write\n  .cassandraFormat(\"events\", \"gdelt_test_3\")\n  .mode(\"append\")\n  .save()","dateUpdated":"2024-01-28T20:21:49+0000","title":"alimenter cassandra par la table events"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472003869_1273377207","id":"20240128-200003_91892084","dateCreated":"2024-01-28T20:00:03+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1114","text":"// Chargement dans un RDD\r\nval mentionsRDD = sc.binaryFiles(path_mentions).\r\n      flatMap { // decompresser les fichiers\r\n        case (name: String, content: PortableDataStream) =>\r\n          val zis = new ZipInputStream(content.open)\r\n          Stream.continually(zis.getNextEntry).\r\n            takeWhile{ case null => zis.close(); false\r\n            case _ => true }.\r\n            flatMap { _ =>\r\n              val br = new BufferedReader(new InputStreamReader(zis))\r\n              Stream.continually(br.readLine()).takeWhile(_ != null)\r\n            }\r\n      }","dateUpdated":"2024-01-28T20:17:53+0000","title":"chargement dans RDD des données mentions de la plage choisie depuis le dossier data"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472003664_-1244974921","id":"20240128-200003_813215677","dateCreated":"2024-01-28T20:00:03+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1042","text":"// Conversion du RDD en dataframe\nval arrays = mentionsRDD.map(_.split(\"\\t\")) \nval maxCols = 15//arrays.first().length\nval mentionsDF = arrays.toDF(\"arr\")\n  .select((0 until maxCols).map(i => $\"arr\"(i).as(s\"col_$i\")): _*)\n\nmentionsDF.show()","dateUpdated":"2024-01-28T20:19:32+0000","title":"conversion de la RDD en dataframe"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472003486_-1246977418","id":"20240128-200003_227430794","dateCreated":"2024-01-28T20:00:03+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:970","text":"// Sélection des colonnes nécessaires pour la suite\n\nval newNames = Seq(\"globaleventid2\", \"mentiontimedate\", \"mentiondoctranslationinfo\")\nval mentionsDF2 = mentionsDF.select(\"col_0\", \"col_2\", \"col_14\").toDF(newNames: _*)\nmentionsDF2.show()","dateUpdated":"2024-01-28T20:20:06+0000"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472003317_248531490","id":"20240128-200003_617235439","dateCreated":"2024-01-28T20:00:03+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:898","text":"def extract_language(translationInfo:String ) : String = {\n    if (translationInfo == null)\n        return \"eng\"\n    else \n        return translationInfo.slice(6, 9)\n}\n\nval extract_language_udf = udf(extract_language _)\nval mentionsDF_final = mentionsDF2.withColumn(\"mentiondoctranslationinfo\", extract_language_udf($\"mentiondoctranslationinfo\"))\nmentionsDF_final.show","dateUpdated":"2024-01-28T20:20:26+0000","title":"tronquer la colonne mentiondoctranslationinfo pour prendre juste la langue de l'article"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472003143_476466483","id":"20240128-200003_1835213751","dateCreated":"2024-01-28T20:00:03+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:826","text":"val uuid = udf(() => UUID.randomUUID().toString)\n\nval mentionsDF_final_WithId = mentionsDF_final.withColumn(\"id\", uuid())\n\n","dateUpdated":"2024-01-28T20:22:00+0000","title":"créer un objet uuid afin de l'utiliser afin d'ajouter une colonne id unique pour la table mentionsDF_final"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472002952_15328803","id":"20240128-200002_1850844261","dateCreated":"2024-01-28T20:00:02+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:754","dateUpdated":"2024-01-28T20:23:29+0000","title":"alimenter cassandra par la table events","text":"mentionsDF_final_WithId.write\n  .cassandraFormat(\"mentions\", \"gdelt_test_3\")\n  .mode(\"append\")\n  .save()"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472002774_-831052166","id":"20240128-200002_609774893","dateCreated":"2024-01-28T20:00:02+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:682","text":"// Chargement dans un RDD\nval gkgRDD = sc.binaryFiles(path_gkg).\n      flatMap { // decompresser les fichiers\n        case (name: String, content: PortableDataStream) =>\n          val zis = new ZipInputStream(content.open)\n          Stream.continually(zis.getNextEntry).\n            takeWhile{ case null => zis.close(); false\n            case _ => true }.\n            flatMap { _ =>\n              val br = new BufferedReader(new InputStreamReader(zis))\n              Stream.continually(br.readLine()).takeWhile(_ != null)\n            }\n      }","dateUpdated":"2024-01-28T20:28:18+0000","title":"chargement de la RDD gkg depuis le fichier data"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473605577_1058857904","id":"20240128-202645_1499685424","dateCreated":"2024-01-28T20:26:45+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3023","text":"// Conversion du RDD en dataframe\nval arrays = gkgRDD.map(_.split(\"\\t\")) \nval maxCols = arrays.first().length\nval gkgDF = arrays.toDF(\"arr\")\n  .select((0 until maxCols).map(i => $\"arr\"(i).as(s\"col_$i\")): _*)\n\ngkgDF.show()\n","dateUpdated":"2024-01-28T20:28:39+0000","title":"conversion de la RDD en dataframe"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473607038_-394457139","id":"20240128-202647_1665728844","dateCreated":"2024-01-28T20:26:47+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3095","text":"def compute_month(date:String) : String = {\n    if (date.length > 6)\n        return date.slice(0,6)\n    else\n        return \"\"\n}\nval compute_month_udf = udf(compute_month _)\ndef compute_year(date:String) : String = {\n        if (date.length > 4)\n        return date.slice(0,4)\n    else\n        return \"\"\n}\nval compute_year_udf = udf(compute_year _)\n\n// Sélection des colonnes nécessaires pour la suite\nval newNames = Seq(\"gkgrecordid\", \"date\", \"sourcecommonname\", \"v1themes\", \"v2enhancedlocations\", \"Persons\", \"v15tone\")\nval gkgDF2 = gkgDF.select(\"col_0\", \"col_1\", \"col_3\", \"col_7\", \"col_10\",\"col_11\",\"col_15\" ).toDF(newNames: _*)\n\ngkgDF2.show()","dateUpdated":"2024-01-28T20:29:40+0000","title":"créer les fonction compute_month, compute_year"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473608438_305110100","id":"20240128-202648_178005706","dateCreated":"2024-01-28T20:26:48+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3167","text":"// définition d'une fonction qui prend le premier float d'une suite de nombres divisées par des virgules\ndef split_tone(tone:String ) : Float = {\n    val res = tone split ',' take 1\n    return res(0).toFloat\n}\nval split_tone_udf = udf(split_tone _)","dateUpdated":"2024-01-28T20:30:22+0000","title":"Préparation de la Requête_3"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473609726_1350308865","id":"20240128-202649_385933401","dateCreated":"2024-01-28T20:26:49+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3239","text":"val gkgDF3_cassandra = gkgDF2.na.drop().withColumn(\"themes\",split(regexp_replace($\"v1themes\", \"(^\\\\[\\\\[\\\\[)|(\\\\]\\\\]\\\\]$)\", \"\"), \";\")).withColumn(\"v15tone2\", split_tone_udf($\"v15tone\")).withColumn(\"persons2\",split(regexp_replace($\"persons\", \"(^\\\\[\\\\[\\\\[)|(\\\\]\\\\]\\\\]$)\", \"\"), \";\")).withColumn(\"locations\",split(regexp_replace($\"v2enhancedlocations\", \"(^\\\\[\\\\[\\\\[)|(\\\\]\\\\]\\\\]$)\", \"\"), \";\")).drop(\"v1themes\", \"v15tone\", \"Persons\", \"v2enhancedlocations\")\nval gkgDF3_cassandra_final = gkgDF3_cassandra.withColumn(\"date2\", $\"date\".cast(StringType)).withColumn(\"monthyear\", compute_month_udf($\"date\")).withColumn(\"year\", compute_year_udf($\"date\")).withColumn(\"v15tone3\", $\"v15tone2\".cast(FloatType)).drop(\"date\", \"v15tone2\")\n\n\ngkgDF3_cassandra_final.show()","dateUpdated":"2024-01-28T20:31:00+0000","title":"créer une liste de thèmes dans la colonnes themes, et créer une nouvelle colonne V15tone ou il y a seulement le premier élément de la suite de chiffre (c'est le ton)"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473827108_1950070547","id":"20240128-203027_572194359","dateCreated":"2024-01-28T20:30:27+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3444","text":"gkgDF3_cassandra_final.write\n  .cassandraFormat(\"gkg_data\", \"gdelt_test_3\")\n  .mode(\"append\")\n  .save()","dateUpdated":"2024-01-28T20:31:19+0000","title":"alimenter cassandra"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473828589_-2034184911","id":"20240128-203028_2029589836","dateCreated":"2024-01-28T20:30:28+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3516","text":"// Sélection des colonnes nécessaires pour la suite\nval newNames_req4 = Seq(\"globaleventid\", \"eventdate\", \"actor1countrycode\", \"actor2countrycode\",\"numarticles\", \"avgtone\")\nval events_req4_cassandra = eventsDF.select(\"col_0\", \"col_1\", \"col_7\", \"col_17\", \"col_33\",\"col_34\").toDF(newNames_req4: _*)\nevents_req4_cassandra.show()","dateUpdated":"2024-01-28T20:34:01+0000","title":"préparation requête 4"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473830086_1873138415","id":"20240128-203030_147761234","dateCreated":"2024-01-28T20:30:30+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3588","text":"events_req4_cassandra.write\n  .cassandraFormat(\"events4\", \"gdelt_test_3\")\n  .mode(\"append\")\n  .save()","dateUpdated":"2024-01-28T20:34:11+0000"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706474033845_-1860366521","id":"20240128-203353_514487663","dateCreated":"2024-01-28T20:33:53+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3770"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706474035304_1829259568","id":"20240128-203355_207434262","dateCreated":"2024-01-28T20:33:55+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3842"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473826269_-1302253562","id":"20240128-203026_227800807","dateCreated":"2024-01-28T20:30:26+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3372"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706474330670_696512125","id":"20240128-203850_733178949","dateCreated":"2024-01-28T20:38:50+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3935"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472002460_1476878937","id":"20240128-200002_734775771","dateCreated":"2024-01-28T20:00:02+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:610","dateUpdated":"2024-01-28T20:23:06+0000","title":"jointure","text":"val eventsDF_test = spark.read\n  .cassandraFormat(\"events\", \"gdelt_test_3\")\n  .load()\n\nval mentionsDF_test =  spark.read\n  .cassandraFormat(\"mentions\", \"gdelt_test_3\")\n  .load()\n  \nval joined = eventsDF_test.join(mentionsDF_test, eventsDF_test(\"globaleventid1\") === mentionsDF_test(\"globaleventid2\")).drop(mentionsDF_test(\"globaleventid2\"))\n\n"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706472001721_331838396","id":"20240128-200001_171186921","dateCreated":"2024-01-28T20:00:01+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:538","text":"\njoined.write\n  .cassandraFormat(\"joined\", \"gdelt_test_3\")\n  .mode(\"append\")\n  .save()","dateUpdated":"2024-01-28T20:23:49+0000","title":"alimenter cassandra par la table (req1 et req2)"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473399836_671677473","id":"20240128-202319_79037087","dateCreated":"2024-01-28T20:23:19+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2883"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473399664_1215682910","id":"20240128-202319_485460813","dateCreated":"2024-01-28T20:23:19+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2811","dateUpdated":"2024-01-28T20:24:55+0000","title":" requete 1","text":"val joined_final = spark.read\n  .cassandraFormat(\"joined\", \"gdelt_test_3\")\n  .load()\n  \n\nval countsDF_test = joined_final.groupBy(\"globaleventid1\", \"eventdate\", \"actiongeo_countrycode\", \"mentiondoctranslationinfo\")\n  .count()\n\ncountsDF_test.show()\n"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473399457_1067957288","id":"20240128-202319_1274187333","dateCreated":"2024-01-28T20:23:19+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2739","dateUpdated":"2024-01-28T20:25:29+0000","title":"requete2","text":"// filtrage par pays\nval filteredjoined = joined.filter($\"actiongeo_countrycode\" === \"US\")\n\n// aggrégation par jour, mois ou année\nval aggregationLevel = \"day\" // Choisissez parmi \"day\", \"month\", \"year\"\n\nval aggregatedDF = aggregationLevel match {\n  case \"day\" => filteredjoined.groupBy(\"eventdate\", \"actiongeo_countrycode\").count().orderBy($\"count\".desc)\n  case \"month\" => filteredjoined.groupBy(\"monthyear\", \"actiongeo_countrycode\").count().orderBy($\"count\".desc)\n  case \"year\" => filteredjoined.groupBy(\"year\", \"actiongeo_countrycode\").count().orderBy($\"count\".desc)\n}"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473398851_285514623","id":"20240128-202318_1448132941","dateCreated":"2024-01-28T20:23:18+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2595","dateUpdated":"2024-01-28T20:26:12+0000","title":"résultat final de la requête_2","text":"aggregatedDF.show()\n"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473398617_951642529","id":"20240128-202318_282697325","dateCreated":"2024-01-28T20:23:18+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2523","text":"val gkg_data = spark.read\n  .cassandraFormat(\"gkg_data\", \"gdelt_test_3\")\n  .load()","dateUpdated":"2024-01-28T20:31:46+0000","title":"lire de cassandra la table gkg"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473398131_-1550902302","id":"20240128-202318_1854145041","dateCreated":"2024-01-28T20:23:18+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2451","text":"import org.apache.spark.sql.functions.col\n\nval chosenSource = \"vnews.com\" // Remplacez par la source de votre choix\n\nval filtered_gkg_data = gkg_data.filter($\"sourcecommonname\" === chosenSource)\n\n\n// Définir le niveau d'agrégation : \"day\", \"month\", \"year\"\nval aggregationLevel = \"year\" // Remplacer par \"month\" ou \"year\" selon le besoin\n\nval aggregated_gkg_data = filtered_gkg_data\n  .groupBy(\n    col(\"sourcecommonname\"),\n    aggregationLevel match {\n      case \"day\" => col(\"date2\")\n      case \"month\" => col(\"monthyear\")\n      case \"year\" => col(\"year\")\n    }\n  )\n  .agg(\n    count(\"gkgrecordid\").as(\"article_count\"),\n    collect_list(\"themes\").as(\"themes\"),\n    collect_list(\"persons2\").as(\"persons\"),\n    collect_list(\"locations\").as(\"locations\"),\n    avg(\"v15tone3\").as(\"average_tone\")\n  )\n\n// Extraction de la date par year rt month pour les thèmes\n\naggregated_gkg_data.show()","dateUpdated":"2024-01-28T20:33:16+0000","title":"Requête 3"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473397369_669341324","id":"20240128-202317_1029631932","dateCreated":"2024-01-28T20:23:17+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2379","dateUpdated":"2024-01-28T20:34:54+0000","title":"requete 4","text":"val events4_data = spark.read\n  .cassandraFormat(\"events4\", \"gdelt_test_3\")\n  .load()\n  \nval filtered_events4_data = events4_data.filter(\n  ($\"actor1countrycode\" === \"CHN\" && $\"actor2countrycode\" === \"FRA\") ||\n  ($\"actor1countrycode\" === \"FRA\" && $\"actor2countrycode\" === \"CHN\")\n)\n\nval aggregated_events4_data = filtered_events4_data\n  .groupBy($\"eventdate\")\n  .agg(\n    count($\"numarticles\").as(\"total_articles\"),\n    avg($\"avgtone\").as(\"average_tone\")\n  )\n  .orderBy($\"eventdate\")\n\n\naggregated_events4_data.show()"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706473395445_-1806566649","id":"20240128-202315_896665046","dateCreated":"2024-01-28T20:23:15+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2307","text":"","dateUpdated":"2024-01-28T20:35:37+0000"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1706471869430_1423916421","id":"20240128-195749_725602512","dateCreated":"2024-01-28T19:57:49+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:280","text":"","dateUpdated":"2024-01-28T19:59:56+0000"}],"name":"Importer_donnee_vers_cassandra","id":"2JQR9NNK3","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}